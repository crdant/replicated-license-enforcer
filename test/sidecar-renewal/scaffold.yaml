---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: licensed-application
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: license-enforcer-role
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "create", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: license-enforcer-role-binding
subjects:
- kind: ServiceAccount
  name: licensed-application
roleRef:
  kind: Role
  name: license-enforcer-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: licensed-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: licensed-application
  template:
    metadata:
      labels:
        app: licensed-application
    spec:
      serviceAccountName: licensed-application
      initContainers:
      - name: license-check
        image: ghcr.io/crdant/replicated-license-enforcer:latest
        command: [ "/enforcer" ]
        args: ["--recheck", "30s" ]    # any valid Go duration
        env:
          - name: REPLICATED_SDK_ENDPOINT
            value: "http://replicated:3000"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
        imagePullPolicy: IfNotPresent
        restartPolicy: Always
      containers:
      - name: licensed-application 
        image: nginx:latest
        ports:
        - containerPort: 80

